{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Template to create VPC reources includeing VPC itself, 2 public Subnets, 2 private Subnets, 1 Internet Gateway and 1 Public Route Table.",
  "Resources": {
    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VpcCidrBlock"
        },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Sub": "${AWS::StackName}-VPC"}
          }
        ]
      }
    },
    "PublicSubnet01": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": "true",
        "CidrBlock": {
          "Fn::Select": [
            "0",
            {
              "Ref": "SubnetCidrBlocks"
            }
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }
          ]
        },
        "VpcId": {
          "Ref": "Vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnet01"
          }
        ]
      }
    },
    "PublicSubnet02": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": "true",
        "CidrBlock": {
          "Fn::Select": [
            "1",
            {
              "Ref": "SubnetCidrBlocks"
            }
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }
          ]
        },
        "VpcId": {
          "Ref": "Vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnet02"
          }
        ]
      }
    },
    "PrivateSubnet01": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": "false",
        "CidrBlock": {
          "Fn::Select": [
            "2",
            {
              "Ref": "SubnetCidrBlocks"
            }
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }
          ]
        },
        "VpcId": {
          "Ref": "Vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnet01"
          }
        ]
      }
    },
    "PrivateSubnet02": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": "false",
        "CidrBlock": {
          "Fn::Select": [
            "3",
            {
              "Ref": "SubnetCidrBlocks"
            }
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }
          ]
        },
        "VpcId": {
          "Ref": "Vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnet02"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Sub": "${AWS::StackName}-IGW"}
          }
        ]
      }
    },
    "VpcGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Sub": "${AWS::StackName}-PublicRouteTable"}
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": "VpcGatewayAttachment"
    },
    "PublicSubnetRouteTableAssociation001": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet02"
        }
      }
    },
    "PublicSubnetRouteTableAssociation002": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet01"
        }
      }
    }
  },
  "Parameters": {
    "VpcCidrBlock": {
      "Type": "String",
      "Default": "10.0.0.0/16",
      "Description": "Enter CIDR Block for VPC. Default is '10.0.0.0/16' (65536 IPs).",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "SubnetCidrBlocks": {
      "Type": "CommaDelimitedList",
      "Default": "10.0.0.0/24, 10.0.1.0/24, 10.0.2.0/24, 10.0.3.0/24",
      "Description": "Comma-delimited list of CIDR blocks for subnets. Default is '10.0.0.0/24, 10.0.1.0/24, 10.0.2.0/24, 10.0.3.0/24' (256 IPs each).",
      "ConstraintDescription": "The single CIDR block must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Outputs": {
    "Vpc": {
      "Value": {
        "Ref": "Vpc"
      }
    },
    "PublicSubnet01": {
      "Value": {
        "Ref": "PublicSubnet01"
      }
    },
    "PublicSubnet02": {
      "Value": {
        "Ref": "PublicSubnet02"
      }
    },
    "PrivateSubnet01": {
      "Value": {
        "Ref": "PrivateSubnet01"
      }
    },
    "PrivateSubnet02": {
      "Value": {
        "Ref": "PrivateSubnet02"
      }
    },
    "PublicRouteTable": {
      "Value": {
        "Ref": "PublicRouteTable"
      }
    }
  }
}
